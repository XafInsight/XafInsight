name: Build & Publish VSTO (main + testing to GitHub Pages)

permissions:
  contents: write  # nodig voor push naar gh-pages

on:
  push:
    branches:
      - main
      - testing
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet
        run: nuget restore xafplugin.sln

      - name: Determine branch and URLs
        id: meta
        shell: pwsh
        run: |
          $branch = "${{ github.ref_name }}"
          $base = "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          if ($branch -eq "testing") {
            $path = "clickonce-testing"
            $install = "$base/$path/"
            echo "publish_target=$path"        >> $env:GITHUB_OUTPUT
            echo "install_url=$install"        >> $env:GITHUB_OUTPUT
            echo "override_urls=true"          >> $env:GITHUB_OUTPUT
          } elseif ($branch -eq "main") {
            $path = "clickonce"
            # main gebruikt InstallUrl/UpdateUrl uit csproj (productie)
            echo "publish_target=$path"        >> $env:GITHUB_OUTPUT
            echo "override_urls=false"         >> $env:GITHUB_OUTPUT
          } else {
            throw "Unexpected branch: $branch"
          }

      # Build + ClickOnce Publish
      # testing → override InstallUrl/UpdateUrl naar /clickonce-testing/
      - name: ClickOnce Publish (testing)
        if: steps.meta.outputs.override_urls == 'true'
        run: >
          msbuild xafplugin\xafplugin.csproj
          /t:Publish /p:Configuration=Release
          /p:AutoIncrementApplicationRevision=true
          /p:InstallUrl=${{ steps.meta.outputs.install_url }}
          /p:UpdateUrl=${{ steps.meta.outputs.install_url }}

      # main → gebruik je csproj (productie InstallUrl), geen override
      - name: ClickOnce Publish (main)
        if: steps.meta.outputs.override_urls != 'true'
        run: >
          msbuild xafplugin\xafplugin.csproj
          /t:Publish /p:Configuration=Release
          /p:AutoIncrementApplicationRevision=true

      # Maak een tijdelijke site-map met alléén de juiste subfolder
      - name: Prepare site folder for Pages
        shell: pwsh
        run: |
          if (Test-Path site) { Remove-Item -Recurse -Force site }
          New-Item -ItemType Directory -Force site\${{ steps.meta.outputs.publish_target }} | Out-Null
          Copy-Item "xafplugin\publish\*" "site\${{ steps.meta.outputs.publish_target }}" -Recurse -Force

      # Deploy naar gh-pages en bewaar bestaande files (zodat beide paden naast elkaar bestaan)
      - name: Deploy to gh-pages (keep existing files)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site
          publish_branch: gh-pages
          keep_files: true
