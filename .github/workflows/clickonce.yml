name: Build & Publish VSTO (main â†’ GitHub Pages)

permissions:
  contents: write  # push naar gh-pages

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet
        run: nuget restore xafplugin.sln

      # 1) Decodeer PFX, importeer in CurrentUser\My, expose THUMBPRINT
      - name: Restore & import signing certificate
        id: cert
        shell: pwsh
        run: |
          if (-not "${{ secrets.CODESIGN_PFX_B64 }}") { throw "Missing secret CODESIGN_PFX_B64" }
          if (-not "${{ secrets.CODESIGN_PFX_PASSWORD }}") { throw "Missing secret CODESIGN_PFX_PASSWORD" }

          $pfxPath = Join-Path $env:RUNNER_TEMP "codesign.pfx"
          [IO.File]::WriteAllBytes($pfxPath, [Convert]::FromBase64String("${{ secrets.CODESIGN_PFX_B64 }}"))

          # Valideer wachtwoord / PFX
          certutil -p "${{ secrets.CODESIGN_PFX_PASSWORD }}" -dump "$pfxPath" | Out-Null

          $sec = ConvertTo-SecureString "${{ secrets.CODESIGN_PFX_PASSWORD }}" -AsPlainText -Force
          $cert = Import-PfxCertificate -FilePath "$pfxPath" -CertStoreLocation Cert:\CurrentUser\My -Password $sec
          if (-not $cert.HasPrivateKey) { throw "Imported cert has no private key" }

          "thumb=$($cert.Thumbprint)" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      # 2) ClickOnce Publish (gesigned via THUMBPRINT)
      - name: ClickOnce Publish (main, signed via thumbprint)
        shell: pwsh
        run: >
          msbuild "xafplugin/xafplugin.csproj"
          /t:Publish /p:Configuration=Release
          /p:AutoIncrementApplicationRevision=true
          /p:SignManifests=true
          /p:ManifestCertificateThumbprint=${{ steps.cert.outputs.thumb }}

      # 3) Zet volledige publish-output naar /clickonce/ op gh-pages
      - name: Prepare site folder for Pages
        shell: pwsh
        run: |
          if (Test-Path site) { Remove-Item -Recurse -Force site }
          New-Item -ItemType Directory -Force "site/clickonce" | Out-Null
          Copy-Item "xafplugin\publish\*" "site\clickonce" -Recurse -Force

      - name: Deploy to gh-pages (keep existing files)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site
          publish_branch: gh-pages
          keep_files: true
